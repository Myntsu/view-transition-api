---
// astro imports
import { Icon } from 'astro-icon';

// json imports
import modules from "../../json/modules.json";

const moduleData = Object.values(modules)
  .map((module) => {
    return {
      module: module.module,
      title: module.title,
      type: module.type,
      active: module.active,
      startingDate: module["starting-date"],
      endingDate: module["ending-date"],
    };
  })
  .sort((a, b) => {
    if (a.active && !b.active) {
      return -1;
    } else if (!a.active && b.active) {
      return 1;
    } else if (a.type === "Finalizado" && b.type !== "Finalizado") {
      return 1;
    } else if (a.type !== "Finalizado" && b.type === "Finalizado") {
      return -1;
    } else {
      return new Date(a.startingDate) - new Date(b.startingDate);
    }
  });
---

<section>
  {
    moduleData.map((module) => (
      <article
        class={`${module.active ? "active" : ""} ${
          module.type === "Finalizado" ? "ended" : ""
        } filter-g8 filter-vespertino filter-remoto filter-${
          module.module
        } filter-lunes filter-martes filter-miercoles filter-jueves filter-viernes`}>
        <div class="title">
          <h3>{module.module}</h3>
          <span class="course-type">{module.type}</span>
        </div>
        <div class="course-information">
          <div class="title-activity">
            <h4>{module.title}</h4>
            <div class={`circle ${module.active ? "active" : ""}`} />
          </div>
          <hr />
          <div class="duration">
            <p>
              <Icon class="icon" name="ic:baseline-calendar-month" /> 
              Comienzo
              <span class="date">{module.startingDate}</span>
            </p>
            <p>
              <Icon class="icon" name="ic:sharp-flag" />
              TÃ©rmino
              <span class="date">{module.endingDate}</span>
            </p>
          </div>
        </div>
      </article>
    ))
  }
</section>

<style lang="scss">
  .hidden {
    display: none !important;
  }

  section {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(min(240px, 100%), 1fr));
    gap: 1rem;

    padding-block-end: 4rem;
  }

  article {
    display: flex;
    flex-wrap: wrap;
    margin-block-end: 1rem;

    &:is(.active) {
      .course-type {
        color: hsl(var(--main-color)) !important;
      }

      .course-information {
        color: hsl(var(--main-light));
        background-color: hsl(var(--important));

        h4 {
          color: hsl(var(--main-light)) !important;
        }
      }
    }

    &:is(.ended) {
      .course-information {
        color: hsl(var(--main-light) / .7);
        background-color: hsl(var(--text-gray)) !important;
      }

      h4 {
          color: hsl(var(--main-light)) !important;
      }
    }

    .title {
      flex: 1 0 100%;
      display: flex;
      justify-content: space-between;
      margin-block-end: 0.25rem;

      .course-type {
        color: hsl(var(--text-gray));
        font-size: 0.75rem;
        font-weight: 900;
      }
    }

    .course-information {
      width: 100%;
      padding: 0.5rem;
      border-radius: 0.25rem;
      cursor: pointer;

      color: hsl(var(--text) / 0.9);

      box-shadow: 2px 2px 10px hsl(var(--main-shadow) / 0.5);

      .title-activity {
        display: flex;
        align-items: flex-start;
        gap: 1rem;

        h4 {
          flex: 1 0 0;
          color: hsl(var(--important));
        }
      }

      .duration {
        display: grid;
        gap: 0.25rem;

        p {
          display: flex;
          gap: .25rem;

          i {
            flex: 0 0 2ch;
          }

          .date {
            margin-inline-start: auto;
          }
        }
      }
    }
  }
</style>
